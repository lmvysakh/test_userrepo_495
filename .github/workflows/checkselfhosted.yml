name: Loading check self hosted windows

on:
  pull_request:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  merge_group:
  schedule:
    - cron: '0 23 * * *'

env:
  GO_VERSION: '1.22'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ self-hosted ]
    steps:
      - name: building defsec
        run: echo "Building defsec..."

      - name: Ensure D drive is available (Windows only)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          $drivePath = Join-Path $env:TEMP "virtual-d-drive"

          # Debug: Log TEMP and drivePath values
          Write-Host "TEMP directory: $env:TEMP"
          Write-Host "Drive Path: $drivePath"

          # Ensure directory exists
          if (-not (Test-Path $drivePath)) {
              Write-Host "Creating directory for virtual drive at $drivePath"
              New-Item -ItemType Directory -Force -Path $drivePath | Out-Null
          }

          # Debug: Ensure directory creation was successful
          if (-not (Test-Path $drivePath)) {
              Write-Error "Failed to create directory at $drivePath"
              Exit 1
          } else {
              Write-Host "Directory $drivePath exists."
          }

          # Optional: Output directory permissions for debugging
          Try {
              $acl = Get-Acl $drivePath
              Write-Host "Permissions for $drivePath:"
              Write-Host $acl
          } Catch {
              Write-Host "Could not get ACL for $drivePath"
          }

          # Map the D: drive if not already present
          if (-not (Test-Path 'D:\')) {
              Write-Host "D: drive not found. Attempting to create a virtual drive as D:."
              Try {
                  Write-Host "Mapping $drivePath to D: drive using 'subst'."
                  subst D: $drivePath
                  Start-Sleep -Seconds 2 # Add a delay to ensure the drive is created.

                  if (-not (Test-Path 'D:\')) {
                      Throw "Failed to create the virtual D: drive. Verify the 'subst' command and permissions."
                  }
                  Write-Host "Successfully created virtual D: drive at $drivePath."
              } Catch {
                  Write-Error "Failed to create virtual D: drive. Error: $_"
                  Write-Host "Debug Info: Drive Path = $drivePath"
                  Exit 1
              }
          } else {
              Write-Host "D: drive already exists."
          }

      - uses: actions/checkout@v4

      - uses: antontroshin/setup-go@windows-go-mod-cache
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: go mod tidy
        if: matrix.os == 'ubuntu-latest'
        run: |
          go mod tidy
          if [ -n "$(git status --porcelain)" ]; then
            echo "Run 'go mod tidy' and push it"
            exit 1
          fi

      - name: Run non-localstack tests
        if: matrix.os != 'ubuntu-latest'
        run: make test-no-localstack
        shell: bash

      - name: Run full tests
        if: matrix.os == 'ubuntu-latest'
        run: make test
        shell: bash
